<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Chain_AlreadyHasNext" xml:space="preserve">
    <value>This Chain instance already has a Next element.</value>
  </data>
  <data name="Chain_ElementAlreadyContained" xml:space="preserve">
    <value>The specified argument contains elements already contained in this chain.</value>
  </data>
  <data name="ClientObjectQueryResolveBuilder_CollectionQuery" xml:space="preserve">
    <value>The {0}.{1} method may not return any objects of type {2}.

All queries must be results of Include() calls. Otherwise, CSOM automatically loads default properties which might be missing on an on-premises SharePoint 2013.</value>
  </data>
  <data name="ClientObjectResolveBuilder_CreateQueriesReturnedNull" xml:space="preserve">
    <value>The "{0}" implementation of CreateQueries resulted in a null value.</value>
  </data>
  <data name="ClientObjectResolveBuilder_StateCountNotEqualToElementCount" xml:space="preserve">
    <value>The array of state objects must have the same length as the number of this resolver's elements.

Number of state objects: {0}
Number of resolver elements {1}</value>
  </data>
  <data name="ClientObjectResolveQueryProcessor_IncludeArgNotArray" xml:space="preserve">
    <value>The specified sub-expression doesn't pass a new array expression as the second argument to the Include call:

{0}</value>
  </data>
  <data name="ClientObjectResolveQueryProcessor_MaxRecursionDepthNegative" xml:space="preserve">
    <value>MaxRecursionDepth cannot be a negative number.</value>
  </data>
  <data name="ClientObjectUpdater_NoParameterSet" xml:space="preserve">
    <value>The specified provisioner has no current ParameterSet.</value>
  </data>
  <data name="ClientObjectUpdater_NotAParameter" xml:space="preserve">
    <value>The specified property '{0}' has no Parameter attributes defined.</value>
  </data>
  <data name="ClientObject_IsNullNotLoaded" xml:space="preserve">
    <value>The specified object hasn't been loaded yet, cannot determine if it is null.</value>
  </data>
  <data name="ContentTypeIdBuilder_NoAbsoluteIDInHierarchy" xml:space="preserve">
    <value>The content type ID could not be determined because no parent of the specified type '{0}' defines an absolute content type ID.</value>
  </data>
  <data name="ContentTypeIdBuilder_NoContentTypeAttribute" xml:space="preserve">
    <value>The content type ID could not be determined because the type '{0}' has no ContentTypeAttribute.</value>
  </data>
  <data name="ContentTypeIdBuilder_NoContentTypeAttributeBaseClass" xml:space="preserve">
    <value>The content type ID cannot be determined because the type '{0}', from which the specified type '{1}' inherits, has no ContentTypeAttribute.</value>
  </data>
  <data name="DeferredResolveBuilder_InnerNotInitialized" xml:space="preserve">
    <value>The DeferredResolveBuilder is not initialized. You must first call InitializeContext method.</value>
  </data>
  <data name="EnumeratorExtensions_EnumerationEnded" xml:space="preserve">
    <value>Sequence doesn't contain more elements.</value>
  </data>
  <data name="Error_ArgumentNullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty string.</value>
  </data>
  <data name="Error_ArgumentNullOrWhitespace" xml:space="preserve">
    <value>Value cannot be null or whitespace-only string.</value>
  </data>
  <data name="Error_InvalidEnum" xml:space="preserve">
    <value>The specified value "{0}" is not a valid {1} enumerated value.</value>
  </data>
  <data name="Error_ObjectNotAssignableToMany" xml:space="preserve">
    <value>The specified object '{0}' is not a subtype of any of the following types: {1}.</value>
  </data>
  <data name="Error_ObjectNotAssignableToOne" xml:space="preserve">
    <value>The specified object '{0}' is not a subtype of '{1}'.</value>
  </data>
  <data name="Error_PropertyNull" xml:space="preserve">
    <value>The property {0} cannot be null.</value>
  </data>
  <data name="Error_SequenceEmpty" xml:space="preserve">
    <value>Value cannot be an empty sequence.</value>
  </data>
  <data name="Error_TypeNotAssignableFrom" xml:space="preserve">
    <value>The specified type '{0}' is not assignable from '{1}'.</value>
  </data>
  <data name="ExpressionExtensions_MemberExpressionNotFound" xml:space="preserve">
    <value>A MemberExpression could not be found in the specified Expression.</value>
  </data>
  <data name="FieldAttribute_EmptyGuid" xml:space="preserve">
    <value>Field ID cannot be an empty Guid.</value>
  </data>
  <data name="FieldAttribute_InvalidGuid" xml:space="preserve">
    <value>The specified string is not a valid Guid.</value>
  </data>
  <data name="HarshActivateFeature_FeatureNotFound" xml:space="preserve">
    <value>Feature ID '{0}' not found.</value>
  </data>
  <data name="HarshCloneable_ExpressionNotFieldOrProperty" xml:space="preserve">
    <value>The specified expression '{0}' is not a property or field access expression.</value>
  </data>
  <data name="HarshCompositeProvisioner_SequenceEmpty" xml:space="preserve">
    <value>The specified sequence cannot be empty.</value>
  </data>
  <data name="HarshContentTypeId_CannotAppendAbsoluteCTId" xml:space="preserve">
    <value>The specified content type ID '{0}' cannot be appended to '{1}', because it is already an absolute content type ID..</value>
  </data>
  <data name="HarshContentTypeId_CannotIsChildOfRelative" xml:space="preserve">
    <value>The specified content type ID '{0}' is not absolute.</value>
  </data>
  <data name="HarshContentTypeId_Expected_32chars_ID_after_00" xml:space="preserve">
    <value>The specified string '{0}' is not a valid content type ID. Expected a 32-character ID after the "00" separator.</value>
  </data>
  <data name="HarshContentTypeId_IllegalCharacters" xml:space="preserve">
    <value>The specified string '{0}' contains characters illegal in a content type ID.</value>
  </data>
  <data name="HarshContentTypeId_NotEven" xml:space="preserve">
    <value>The specified string '{0}' is not a valid content type ID, its length isn't an even number.</value>
  </data>
  <data name="HarshContentTypeId_RelCTId_00_Invalid" xml:space="preserve">
    <value>The specified string "00" is used to separate content type ID parts and therefore cannot be used as a valid relative content type ID.</value>
  </data>
  <data name="HarshContentTypeId_RelCTId_Invalid" xml:space="preserve">
    <value>The specified relative content type ID '{0}' is invalid. A relative content type ID is either a 2 or 32 character long hexadecimal string.</value>
  </data>
  <data name="HarshContentType_BothIdAndParentContentTypeCannotBeSet" xml:space="preserve">
    <value>Id and ParentContentType properties cannot be both set.</value>
  </data>
  <data name="HarshDependencyGraph_EdgeFromToEqual" xml:space="preserve">
    <value>The specified edge from "{0}" to "{1}" is invalid.</value>
  </data>
  <data name="HarshEntityMetadataContentType_NoContentTypeAttribute" xml:space="preserve">
    <value>The specified type '{0}' has no ContentTypeAttribute.</value>
  </data>
  <data name="HarshEntityMetadata_DoesntBelongToARepo" xml:space="preserve">
    <value>This HarshEntityMetadata instance doesn't belong to a HarshEntityMetadataRepository.</value>
  </data>
  <data name="HarshEntityMetadata_TypeNotAnEntity" xml:space="preserve">
    <value>The specified type '{0}' is not a subclass of HarshEntity.</value>
  </data>
  <data name="HarshFieldProvisionerBase_FieldIdEmpty" xml:space="preserve">
    <value>The FieldId cannot be an empty Guid.</value>
  </data>
  <data name="HarshFieldProvisioner_SchemaXmlNotSet" xml:space="preserve">
    <value>The field cannot be added because FieldSchemaXml is null.</value>
  </data>
  <data name="HarshFieldProvisioner_TransformNull" xml:space="preserve">
    <value>HarshFieldSchemaXmlTransformer.Transform cannot be null.</value>
  </data>
  <data name="HarshFieldSchemaXmlProvisioner_PropertyEmptyGuid" xml:space="preserve">
    <value>The {0} cannot be an empty Guid.</value>
  </data>
  <data name="HarshFieldSchemaXmlProvisioner_PropertyWhiteSpace" xml:space="preserve">
    <value>The {0} cannot be null or a whitespace-only string.</value>
  </data>
  <data name="HarshProvisionerBase_NoContext" xml:space="preserve">
    <value>This operation is valid only during a Provision/Unprovision call.</value>
  </data>
  <data name="HarshProvisionerBase_ParameterMandatory" xml:space="preserve">
    <value>The mandatory parameter '{0}' must be set.</value>
  </data>
  <data name="HarshProvisionerMetadata_DefaultParameterSetNotFound" xml:space="preserve">
    <value>Default parameter set '{0}' could not be found on type '{1}'.</value>
  </data>
  <data name="HarshProvisionerMetadata_InvalidParameterProperty" xml:space="preserve">
    <value>The specified property '{0} {1}.{2}' is not a valid parameter. Parameters must be read-write, public, instance, non-abstract, non-indexer properties.</value>
  </data>
  <data name="HarshProvisionerMetadata_MandatoryTypeNotSupportedByDefaultValuePolicy" xml:space="preserve">
    <value>The mandatory parameter '{0}.{1}' is of type '{2}', which is not supported by the DefaultValuePolicy '{3}'.</value>
  </data>
  <data name="HarshProvisionerMetadata_MoreParametersWithSameSet" xml:space="preserve">
    <value>Parameters cannot be members of the same parameter set multiple times.

Property: {0}.{1}
Duplicate parameter sets: {2}</value>
  </data>
  <data name="HarshProvisionerMetadata_NoTagTypesOnResolvers" xml:space="preserve">
    <value>The specified property '{0}.{1}' is of type IResolve or IResolveSingle and cannot have a TagType set.</value>
  </data>
  <data name="HarshProvisionerMetadata_NoValueTypeDefaultFromContext" xml:space="preserve">
    <value>DefaultFromContext properties must be reference types. The specified property '{0}.{1}' is of type '{2}'. </value>
  </data>
  <data name="HarshProvisionerMetadata_ParameterBothCommonAndInSet" xml:space="preserve">
    <value>Parameters can either be shared by all parameter sets by having ParameterSetName equal to null, or belong to one or more named parameter sets.

Property: {0}.{1}</value>
  </data>
  <data name="HarshProvisionerMetadata_TagTypeNotAssignableFromIDefaultFromContextTag" xml:space="preserve">
    <value>The specified property '{1}.{2}' has DefaultFromContext TagType of '{0}' that does not implement the IDefaultFromContextTag interface.</value>
  </data>
  <data name="HarshTuple_CreateTupleItemsCountDoesNotMatchType" xml:space="preserve">
    <value>The specified item array length {0} doesn't match the arity of '{1}'.</value>
  </data>
  <data name="HarshTuple_TooManyComponentTypes" xml:space="preserve">
    <value>Cannot create a tuple with more than {0} components.</value>
  </data>
  <data name="HarshTuple_TypeIsNotAConstructedGenericType" xml:space="preserve">
    <value>The specified type '{0}' is not a constructed generic type.</value>
  </data>
  <data name="HarshTuple_TypeIsNotATuple" xml:space="preserve">
    <value>The specified type '{0}' is not a Tuple.</value>
  </data>
  <data name="HarshUrl_UrlNotRelativeTo" xml:space="preserve">
    <value>The specified url '{0}' is not relative to '{1}'.</value>
  </data>
  <data name="NestedResoveResult_LastComponentCannotBeNull" xml:space="preserve">
    <value>Last element of the sequence cannot be null.</value>
  </data>
  <data name="NestedResoveResult_LastComponentTypeMustBeAssignableFromT" xml:space="preserve">
    <value>The last specified component type '{0}' must be assignable from '{1}'.</value>
  </data>
  <data name="ObjectMapper_NoSourceSelectorFound" xml:space="preserve">
    <value>The following properties could not be found on {0}. You need to call Map(x =&gt; x.Foo).From(y =&gt; y.Bar) to specify the source property.
Properties: {1}</value>
  </data>
  <data name="ParameterSetResolver_Ambiguous" xml:space="preserve">
    <value>Parameter set cannot be resolved using the specified parameters.</value>
  </data>
  <data name="PropertyAccessor_PropertyNotWritable" xml:space="preserve">
    <value>The current property '{0}' is not writable.</value>
  </data>
  <data name="Resolvable_ManyResults" xml:space="preserve">
    <value>The {0} resolved in more than one result.</value>
  </data>
  <data name="Resolvable_NoResult" xml:space="preserve">
    <value>The {0} resolved in no results.</value>
  </data>
  <data name="Resolvable_ResultsNotAvailableNotResolved" xml:space="preserve">
    <value>The resolver '{0}' must be resolved via the IResolver interface to retrieve results.</value>
  </data>
  <data name="ResolveBuilder_CannotCallThisMethod" xml:space="preserve">
    <value>This method cannot be called on ResolveBuilders.</value>
  </data>
  <data name="ResolveRegistrar_ContextFactoryReturnedNull" xml:space="preserve">
    <value>Resolve context factory returned null.</value>
  </data>
  <data name="ResolveResultConverterStrategyGrouping_NotAGrouping" xml:space="preserve">
    <value>The specified type '{0}' is not an IGrouping.</value>
  </data>
  <data name="ResolveResultConverterStrategyTuple_NestedGroupingNotAllowed" xml:space="preserve">
    <value>Tuples of IGroupings are not supported: {0}.</value>
  </data>
  <data name="ResolveResultFactory_ObjectNotConvertable" xml:space="preserve">
    <value>The specified object '{0}' cannot be converted to '{1}'.</value>
  </data>
  <data name="ResolveResultFactory_PropertyTypeNotGeneric" xml:space="preserve">
    <value>The specified property type '{0}' is not a generic type.</value>
  </data>
  <data name="ResolveResultFactory_PropertyTypeUnknownInterface" xml:space="preserve">
    <value>The specified property type generic definition '{0}' is not one of the known interface types: {1}.</value>
  </data>
  <data name="TypeInfoExtension_ArgNotInterfaceDefinition" xml:space="preserve">
    <value>The specified type '{0}' is not a generic interface definition.</value>
  </data>
</root>